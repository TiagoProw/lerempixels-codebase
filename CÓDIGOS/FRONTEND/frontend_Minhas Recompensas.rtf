// frontend/Minhas Recompensas
import wixUsers from 'wix-users';
import wixData from 'wix-data';
import wixLocation from 'wix-location';
import wixWindow from 'wix-window';
import { obterQuantidadesDeCuponsDisponiveis, resgatarCupom } from 'backend/recompensas';

let pontosUsuario = 0;
let totalComprasUsuario = 0;

$w.onReady(async function () {
    const user = wixUsers.currentUser;
    if (!user.loggedIn) return;

    async function atualizarPontosUsuario() {
        const userId = user.id;
        const hoje = new Date();
        const mes = String(hoje.getMonth() + 1).padStart(2, '0');
        const ano = hoje.getFullYear();
        const mesAnoAtual = `${mes}/${ano}`;

        // Buscar pontos e progresso do usuário
        const { items: progresso } = await wixData.query("ProgressoUsuarios")
            .eq("userId", userId)
            .eq("mesAno", mesAnoAtual)
            .limit(1)
            .find();

        if (progresso.length > 0) {
            pontosUsuario = progresso[0].pontosGanhos || 0;
            totalComprasUsuario = progresso[0].totalCompras || 0;
        } else {
            pontosUsuario = 0;
            totalComprasUsuario = 0;
        }
        $w('#textPontosUsuario').text = `${pontosUsuario}`;
    }

    async function atualizarRepeaterCupons() {
        const contagem = await obterQuantidadesDeCuponsDisponiveis();

        const opcoes = Array.from({ length: 10 }, (_, i) => {
            const valor = i + 1;
            return {
                _id: `cupom-${valor}`, // ID obrigatório
                valorReais: valor,
                pontosNecessarios: valor * 20,
                resgatesDisponiveis: contagem[valor] || 0
            };
        });

        $w('#repeaterCupom').data = opcoes;
    }

    // Carregar dados iniciais
    await atualizarPontosUsuario();

    // Buscar recompensas
    const { items: recompensas } = await wixData.query("RecompensasDisponiveis")
        .eq("ativo", true)
        .find();

    $w("#repeaterRecompensas").data = recompensas;

    $w("#repeaterRecompensas").onItemReady(($item, itemData) => {
        const pontosNecessarios = itemData.pontosNecessarios || 0;
        const tipoResgate = itemData.tipoResgate || "cupom";
        const titulo = itemData.userId || "Sem título";
        const descricao = itemData.descricao || "Sem descrição";

        $item('#textTitulo').text = titulo;
        $item('#textDescricao').text = descricao;
        $item('#textCupom').collapse();
        $item('#btnObterCupom').hide();
        $item('#barraProgresso').hide();

        // CUPOM — padrão
        if (tipoResgate === "cupom") {
            $item('#textPontosNecessarios').text = `${pontosNecessarios} Pixel Points`;
            const podeResgatar = pontosUsuario >= pontosNecessarios;

            $item('#btnObterCupom').label = podeResgatar ? "Obter Cupom" : "Pontos Insuficientes";
            podeResgatar ? $item('#btnObterCupom').enable() : $item('#btnObterCupom').disable();
            $item('#btnObterCupom').show();

            $item('#btnObterCupom').onClick(() => {
                if (podeResgatar) {
                    $item('#textCupom').text = itemData.codigoDesconto || "Cupom não disponível";
                    $item('#textCupom').expand();
                    $item('#btnObterCupom').label = "Cupom Exibido";
                    $item('#btnObterCupom').disable();
                }
            });
        }

        // PROGRESSO — baseado em compras ou pontos
        else if (tipoResgate === "progresso") {
            if (titulo.toLowerCase().includes("compra")) {
                // Recompensa baseada em compras (ex: 2 compras no mês)
                const comprasNecessarias = 2;
                const progresso = Math.min(totalComprasUsuario / comprasNecessarias, 1);

                $item('#textPontosNecessarios').text = `${totalComprasUsuario} de ${comprasNecessarias} compras` + (progresso >= 1 ? " ✔️" : "");
                $item('#barraProgresso').value = progresso * 100;
                $item('#barraProgresso').show();
            } else if (pontosNecessarios > 0) {
                // Recompensa baseada em pontos (ex: 200 Pixel Points)
                const pontosMostrados = Math.min(pontosUsuario, pontosNecessarios);
                $item('#textPontosNecessarios').text = `${pontosMostrados} de ${pontosNecessarios} Pixel Points` + (pontosUsuario >= pontosNecessarios ? " ✔️" : "");
                $item('#barraProgresso').value = pontosMostrados / pontosNecessarios * 100;
                $item('#barraProgresso').show();
            } else {
                // Missões com 0 pontos necessários (cumpridas automaticamente)
                $item('#textPontosNecessarios').text = `Concluido ✔️`;
            }
        }

        // EXTERNO — link externo no código do cupom
        else if (tipoResgate === "externo" && itemData.codigoDesconto) {
            $item('#textPontosNecessarios').text = `Clique para acessar`;
            $item('#btnObterCupom').label = "Acessar";
            $item('#btnObterCupom').enable();
            $item('#btnObterCupom').onClick(() => {
                wixLocation.to(itemData.codigoDesconto);
            });
            $item('#btnObterCupom').show();
        }
    });
    // ---------------------------------------------------
    // RECOMPENSA DE CUPONS POR PONTOS
    // ---------------------------------------------------
    $w('#btnCriarCupom').onClick(async () => {
        $w('#abaRepeaterCupom').expand();

        await atualizarRepeaterCupons();

        await atualizarRepeaterCupons();

        const contagem = await obterQuantidadesDeCuponsDisponiveis();

        const opcoes = Array.from({ length: 10 }, (_, i) => {
            const valor = i + 1;
            return {
                _id: `cupom-${valor}`, // <- Adiciona o ID obrigatório
                valorReais: valor,
                pontosNecessarios: valor * 20,
                resgatesDisponiveis: contagem[valor] || 0
            };
        });

        $w('#repeaterCupom').data = opcoes;

        $w('#repeaterCupom').onItemReady(($item, itemData) => {
            const { valorReais, pontosNecessarios, resgatesDisponiveis } = itemData;

            $item('#textValorCupom').text = `R$${valorReais}`;
            $item('#textRestamCupom').text = `${resgatesDisponiveis}/10 resgates`;

            const podeResgatar = pontosUsuario >= pontosNecessarios && resgatesDisponiveis > 0;

            $item('#btnResgatarCupom').label = podeResgatar ? "Resgatar" : "Indisponível";
            podeResgatar ? $item('#btnResgatarCupom').enable() : $item('#btnResgatarCupom').disable();

            $item('#btnResgatarCupom').onClick(async () => {
                $item('#btnResgatarCupom').label = "Processando...";
                $item('#btnResgatarCupom').disable();

                try {
                    const resultado = await resgatarCupom(valorReais);
                    $item('#btnResgatarCupom').label = `Cupom: ${resultado.codigo}`;
                    // Atualiza os pontos e o repeater logo após resgatar
                    await atualizarPontosUsuario();
                    await atualizarRepeaterCupons();

                } catch (erro) {
                    console.error(erro);
                    $item('#btnResgatarCupom').label = "Erro ao resgatar";
                    setTimeout(() => {
                        $item('#btnResgatarCupom').label = "Tentar novamente";
                        $item('#btnResgatarCupom').enable();
                    }, 3000);
                }
            });
            console.log("Repetidor carregando:", {
                valor: itemData.valorReais,
                pontosNecessarios: itemData.pontosNecessarios,
                resgatesDisponiveis: itemData.resgatesDisponiveis,
                pontosUsuario: pontosUsuario
            });
        });
    });

    // Função para carregar cupons usados pelo usuário
    async function carregarCuponsUsuario() {
        const user = wixUsers.currentUser;
        if (!user.loggedIn) {
            $w('#repeaterMeusCupons').data = [];
            return;
        }
        const userId = user.id;

        const resultado = await wixData.query('UsoDePontos')
            .eq('userId', userId)
            .descending('dataUso') // ordenar do mais recente
            .limit(50)
            .find();

        const cupons = resultado.items.map(item => ({
            _id: item._id,
            valorDescontado: item.valorDescontado,
            codigoCupom: item.codigoCupom
        }));

        if (cupons.length === 0) {
            // Oculta a caixa e mostra mensagem
            $w('#repeaterMeusCupons').collapse();
            $w('#textSemCupons').show(); // crie esse texto no editor, inicialmente escondido
        } else {
            // Mostra a caixa e esconde mensagem
            $w('#repeaterMeusCupons').expand();
            $w('#textSemCupons').hide();
            $w('#repeaterMeusCupons').data = cupons;
        }
    }
    // No onItemReady do repeaterMeusCupons, configurar os textos e botão copiar
    $w('#repeaterMeusCupons').onItemReady(($item, itemData) => {
        $item('#textValorCupomUsado').text = `R$${itemData.valorDescontado}`;
        $item('#textCodigoCupomUsado').text = itemData.codigoCupom;

        $item('#btnCopiarCupom').onClick(() => {
            wixWindow.copyToClipboard(itemData.codigoCupom)
                .then(() => {
                    $item('#btnCopiarCupom').label = 'Copiado!';
                    setTimeout(() => {
                        $item('#btnCopiarCupom').label = 'Copiar';
                    }, 2000);
                })
                .catch(() => {
                    $item('#btnCopiarCupom').label = 'Erro';
                });
        });
    });
})

$w('#btnFecharCaixaCupom').onClick((event) => {
    $w('#abaRepeaterCupom').collapse();

})
