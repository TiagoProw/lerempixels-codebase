// backend/events.js
import wixData from "wix-data";
import { checkAndGrantEbooksAccess } from "backend/grantEbooksAccess";

export async function wixStores_onOrderPaid(event) {
  try {
    const userId = event.buyerInfo.id;
    const hoje = new Date();
    const mesAtual = String(hoje.getMonth() + 1).padStart(2, '0');
    const anoAtual = hoje.getFullYear();
    const mesAnoAtual = `${mesAtual}/${anoAtual}`;

    // Reset automático no 1º dia
    if (hoje.getDate() === 1) {
      await resetBonusMensal();
    }

    const queryResult = await wixData.query("ProgressoUsuarios")
      .eq("userId", userId)
      .eq("mesAno", mesAnoAtual)
      .limit(1)
      .find();

    let registro = queryResult.items[0];
    if (registro) {
      registro.totalCompras = (registro.totalCompras || 0) + 1;
      if (registro.totalCompras >= 2 && !registro.bonusConcedido) {
        registro.pontosAtuais = (registro.pontosAtuais || 0) + 25;
        registro.pontosTotaisAcumulados = (registro.pontosTotaisAcumulados || 0) + 25;
        registro.bonusConcedido = true;
        console.log(`Bônus concedido ao usuário ${userId}`);
      }
      await wixData.update("ProgressoUsuarios", registro);
      console.log("✅ Tentando chamar checkAndGrantEbooksAccess para userId no events:", userId);
      await checkAndGrantEbooksAccess(userId); // ✅ chamada da função após update
    } else {
      const novoRegistro = {
        userId,
        mesAno: mesAnoAtual,
        totalCompras: 1,
        pontosAtuais: 0,
        pontosTotaisAcumulados: 0,
        bonusConcedido: false
      };
      await wixData.insert("ProgressoUsuarios", novoRegistro);
      await checkAndGrantEbooksAccess(userId); // ✅ chamada da função após insert

    }
  } catch (err) {
    console.error("Erro no processamento de bônus:", err);
  }
}

async function resetBonusMensal() {
  try {
    let pagina = 0, registrosAtualizados = 0;

    let continuar = true;
    while (continuar) {
      const { items, length } = await wixData.query("ProgressoUsuarios")
        .limit(1000)
        .skip(pagina * 1000)
        .find();

      if (length === 0) {
        continuar = false;
        break;
      }

      await Promise.all(items.map(item => {
        item.bonusConcedido = false;
        return wixData.update("ProgressoUsuarios", item);
      }));

      registrosAtualizados += items.length;
      pagina++;
    }

    console.log(`Reset mensal completo — ${registrosAtualizados} registros atualizados.`);
  } catch (err) {
    console.error("Erro no reset mensal:", err);
  }
}
